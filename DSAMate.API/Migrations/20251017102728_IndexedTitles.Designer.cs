// <auto-generated />
using System;
using DSAMate.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DSAMate.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251017102728_IndexedTitles")]
    partial class IndexedTitles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DSAMate.API.Data.Domains.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hint")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Difficulty")
                        .HasDatabaseName("IX_Questions_Difficulty");

                    b.HasIndex("Title")
                        .IsUnique();

                    b.HasIndex("Topic")
                        .HasDatabaseName("IX_Questions_Topic");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("DSAMate.API.Models.Domains.UserQuestionStatus", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSolved")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SolvedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "QuestionId");

                    b.HasIndex("QuestionId");

                    b.ToTable("UserQuestionStatuses");
                });

            modelBuilder.Entity("DSAMate.API.Models.Domains.UserQuestionStatus", b =>
                {
                    b.HasOne("DSAMate.API.Data.Domains.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });
#pragma warning restore 612, 618
        }
    }
}
